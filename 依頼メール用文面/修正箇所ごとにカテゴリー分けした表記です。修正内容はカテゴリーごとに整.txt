修正箇所ごとにカテゴリー分けした表記です。修正内容はカテゴリーごとに整理して記載しています。


以下が前半と後半の内容を合体させ、修正箇所ごとにカテゴリー分けした表記です。修正内容はカテゴリーごとに整理して記載しています。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

【交通費申請サービス】
詰め替え処理の実装方法

取得データのコードと表示名を付与する処理において、Map を使用し、コードに紐づく表示名を効率的に格納する方法を採用する。二重ループではなく Map で管理する方法が推奨される。
コード分類ごとの表示名取得処理の汎用化

コードマスタからの取得結果を Map に格納し、汎用的な処理を実現する。メソッド呼び出し時の引数は List を使用し、コード分類の表示が増えた場合でも拡張しやすい設計に変更する。
業務日付の算出方法

「最低表示年数」分を業務日付から引いた年を求め、その年の1月1日をFromに設定する。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

【交通費申請マッパー】
SQLの修正

交通費申請テーブルの利用日に対して、BETWEEN を使用して月初日から月末日までの範囲を指定する。
引数として渡される From と To を使用し、From が NULL でなければクエリに From を追加、To が NULL でなければクエリに To を追加する。
コード結合処理の廃止

データベースからのデータ取得において結合は行わず、サービス層での処理に委ねる。

申請年取得メソッドの修正

引数に From と To を追加。From が NULL でなければ抽出条件に追加、To が NULL でなければ抽出条件に追加する。
プロパティファイルから「最低表示年数」を取得し、その年数に基づいて、From として指定する年を算出する。
プロパティファイルの使用

新規作成するプロパティファイルに「最低表示年数」を設定し、その値を取得して使用する。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

【コードマスター】
プロパティファイルでの設定を検討
コードマスターの設定に依存する部分を、プロパティファイルから取得する方式に変更することを検討する。必要に応じてコードマスターから取得する処理に変更しても良い。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

【設計書】
具体的な実装方法を避けた記述

設計書には、具体的な実装方法（例: マップによる詰め替え処理）は記載せず、処理の目的に焦点を当てた記述に変更する。例えば「検索結果.〇〇コードに紐づく名称を取得し、返却値DTO.〇〇名へ設定する」という形で記載する。
コード分類取得の設計変更

コード分類ごとの取得メソッドを、引数に応じた動的な処理に変更し、その結果を Map 形式で返す設計に修正する。

